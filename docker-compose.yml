version: "3.8"

services:
  kong:
    container_name: webhood-proxy
    image: kong:3.5
    restart: unless-stopped
    ports:
      - ${WEBHOOD_HTTP_PORT:-8000}:8000/tcp
      - ${WEBHOOD_HTTPS_PORT:-8443}:8443/tcp
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      KONG_SSL_CERT: ${WEBHOOD_TLS_CERT:+/usr/local/kong/cert.crt}
      KONG_SSL_CERT_KEY: ${WEBHOOD_TLS_KEY:+/usr/local/kong/key.crt}
    volumes:
      - ./kong.yml:/usr/local/kong/kong.yml:ro
      - ${WEBHOOD_TLS_CERT:-/dev/null}:/usr/local/kong/cert.crt:ro
      - ${WEBHOOD_TLS_KEY:-/dev/null}:/usr/local/kong/key.crt:ro
    networks:
      - frontend
      - rest

  scanner:
    container_name: webhood-scanner
    image: ghcr.io/webhood-io/webhood/scanner:latest
    restart: always
    environment:
      ENDPOINT: http://kong:8000
      SCANNER_TOKEN: ${SCANNER_TOKEN}
      HTTP_PROXY: ${HTTP_PROXY}
      HTTPS_PROXY: ${HTTPS_PROXY}
      NO_PROXY: ${NO_PROXY}
    networks:
      - rest
    security_opt:
      # Use seccomp to restrict the syscalls that the container can make for Chrome
      # This allows us to run chrome with sandboxing enabled without having to run the whole container as root
      - seccomp=./files/chrome.json

  core:
    container_name: webhood-core
    image: ghcr.io/webhood-io/webhood/core:latest
    restart: always
    environment:
      API_URL: ${EXTERNAL_URL:?error}
      SELF_REGISTER: ${SELF_REGISTER:-false}
      HOSTNAME: 0.0.0.0 # bind to all interfaces. This is needed for nextjs to work. Note that this by itself does not expose the docker directly.
      # Ignore TLS errors for self-signed certificates between the UI and the internal admin API
      # Note that this does not affect the TLS connection between the UI and the browser
      NODE_TLS_REJECT_UNAUTHORIZED: 0
    networks:
      - rest
      - frontend

  backend:
    container_name: webhood-backend
    image: ghcr.io/webhood-io/webhood/backend:latest
    # build: ./backend
    restart: always
    environment:
      # https://github.com/pocketbase/pocketbase/releases/tag/v0.17.3
      # TODO: Remove once fixed in upstream
      - TMPDIR=/pb/pb_data/storage/xeb56gcfepjsjb4/
    volumes:
      - data:/pb/pb_data
      - migrations:/pb/pb_migrations
    command:
      - serve
      - --http=0.0.0.0:8090
    networks:
      - frontend

volumes:
  data:
  migrations:

networks:
  db:
  rest:
  frontend:
